<%# 
PARTIAL ROUTE: pages/projects/svg-basics.ejs
PARTIAL DESCRIPTION: Description...
LOCAL VARIABLES:
----------------------------------
- locals.fullPageRequest
- locals.pageRequest
%>
<%if(locals.fullPageRequest||locals.pageRequest){%>
  <h1 id="page-header" class="page-title">Some SVG Basics</h1>
  <section id="things-to-remember">
    <h2 class="bold bb-thick h2">
      <a href="#things-to-remember" class="same-page fw-regular">Things To Remember</a>
    </h2>
    <p class="bold mt-2 h6">Links:</p>
    <ul>
      <li>
        <a href="https://www.youtube.com/watch?v=xkBheRZTkaw" class="secondary link" target="_blank">What I'm using to learn d3.js </a>
      </li>
      <li>
        <a href="https://d3js.org/" class="secondary link" target="_blank" >D3 Library</a>
      </li>
      <li>
        <a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes" target="_blank" class="secondary link">MDN Docs On SVGs</a>
      </li>
      <li>
        <a href="https://webdesign.tutsplus.com/how-to-use-animatetransform-for-inline-svg-animation--cms-22296t" class="secondary link" target="_blank">Animate Transform Reference</a>
      </li>
    </ul>
  </section>
  <style>
    td {
      min-width: 100px!important;
    }
    tr>td:nth-child(2) {
      min-width: 200px!important;
    }
  </style>
  <section id="what-im-trying-to-build" class="mt-2">
    <h2 class="bold bb-thick h2">
      <a href="#things-to-remember" class="same-page fw-regular">What I'm Trying to Build</a>
    </h2>
    <p class="body1 mt-2">
      I'm trying to create an SVG editor where users can create SVGs with animations in an area about 300px wide and 300px tall. <br>
      I want it to be intuitive - so far, I have had trouble figuring out how to create good, animated SVGs using the editors that are out there right now.
      <br>
      <br>
      I want it to be lightweight so that users can create interesting designs that do not have a significant negative impact on page performance. 
      <br>
      <br>
      I will be making this SVG editor using <a href="https://pixijs.com/" class="secondary link" target="_blank">PixiJS</a>. 
      <br>
      The editor should output a single <span><code class="hljs"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span></span></code></span> tag that contains one or more of the following tags:
    </p>
    <ul class="inline mt-1">
      <li>
        <span><code class="hljs"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">circle</span>&gt;</span></span></code></span>
      </li>
      <li>
        <span><code class="hljs"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ellipse</span>&gt;</span></span></code></span>
      </li>
      <li>
        <span><code class="hljs"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">rect</span>&gt;</span></span></code></span>
      </li>
      <li>
        <span><code class="hljs"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">line</span>&gt;</span></span></code></span>
      </li>
      <li>
        <span><code class="hljs"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">polyline</span>&gt;</span></span></code></span>
      </li>
      <li>
        <span><code class="hljs"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">polygon</span>&gt;</span></span></code></span>
      </li>
      <li>
        <span><code class="hljs"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">path</span>&gt;</span></span></code></span>
      </li>
    </ul>
    <div class="alert filled error icon medium mt-2" role="alert">
      <svg focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="Warning"><path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"></path></svg>
      <p class="alert body2">
        <span>
          Note that there are some differences between what <a href="https://pixijs.com/" class="secondary link" target="_blank">PixiJS</a> is capable of doing and what svgs are able to do by themselves. That is why I am going to look more into each of the elements below to find out what attributes are animatable and what can be customized by the user.  
        </span>
      </p>
      <button aria-label="Close Alert" class="icon medium close-alert" type="button">
        <svg focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="Close"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path></svg>
      </button>
    </div>
    <p class="body1 mt-1">
      The SVG editor could be able to implement AI in the future - i.e. by generating paths from the outlines of objects in images and the like.
    </p>
    <p class="body1 mt-1">
      Each of the elements listed above should be able to use the <span><code class="hljs"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">animate</span>&gt;</span></span></code></span>, <span><code class="hljs"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">animateTransform</span>&gt;</span></span></code></span>, <span><code class="hljs"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">animate</span>&gt;</span></span></code></span>, and <span><code class="hljs"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">animateMotion</span>&gt;</span></span></code></span> elements.
    </p>
    <p class="body1 mt-1">
      I haven't figured out yet how I will implement gradients. The user may be able to create gradients near the bottom of the page, and then select from those gradients for the fill / line color of an element.
    </p>
  </section>

  <section id="svg-bascis">
    <h2 class="bold bb-thick h2 mt-2">
      <a href="#svg-bascis" class="same-page fw-regular">Learning Basics of SVGs</a>
    </h2>
    

    <details aria-label="Creating SVGs" class="mt-2">
      <summary>
          <span class="h6 fw-regular">Creating SVGs</span>
          <svg class="details" focusable="false" inert viewBox="0 0 24 24">
          <path d="M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z">
          </path>
          </svg>
      </summary>
      <div class="accordion-content" aria-hidden="true">

        <div style="flex-wrap: wrap;" class="flex-row gap-2">
          <div>
            <p class="mt-2 bold body1">Add Ellipse SVG</p>
          <button class="icon large">
            <svg viewBox="0 0 24 24" tabindex="-1" focusable="false">
              <ellipse cx="50%" cy="50%" rx="46%" ry="34%" fill="transparent" stroke="var(--text-primary)" stroke-width="2"></ellipse>
              <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"></path>
            </svg>
          </button>
          </div>
          
    
          <div>
            <p class="mt-2 bold body1">Add Rectangle SVG</p>
          <button class="icon large">
            <svg viewBox="0 0 24 24" tabindex="-1" focusable="false">
              <rect x="5%" y="15%" width="90%" height="70%" rx="0" ry="0" stroke="var(--text-primary)" stroke-width="2" fill="transparent"></rect>
              <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"></path>
            </svg>
          </button>
          </div>
          
    
          <div>
            <p class="mt-2 bold body1">Add Line SVG</p>
          <button class="icon large">
            <svg focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="EditOff"><path d="m12.126 8.125 1.937-1.937 3.747 3.747-1.937 1.938zM20.71 5.63l-2.34-2.34a1 1 0 0 0-1.41 0l-1.83 1.83 3.75 3.75L20.71 7a1 1 0 0 0 0-1.37zM2 5l6.63 6.63L3 17.25V21h3.75l5.63-5.62L18 21l2-2L4 3 2 5z"></path></svg>
          </button>
          </div>
          
  
          <div>
            <p class="mt-2 bold body1">Add Polyline SVG</p>
          <button class="icon large">
            <svg focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="Polyline"><path d="M15 16v1.26l-6-3v-3.17L11.7 8H16V2h-6v4.9L7.3 10H3v6h5l7 3.5V22h6v-6z"></path></svg>
          </button>
          </div>
          
    
          <div>
            <p class="mt-2 bold body1">Add Polygon SVG</p>
          <button class="icon large">
            <svg focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="Draw"><path d="m18.85 10.39 1.06-1.06c.78-.78.78-2.05 0-2.83L18.5 5.09c-.78-.78-2.05-.78-2.83 0l-1.06 1.06 4.24 4.24zm-5.66-2.83L4 16.76V21h4.24l9.19-9.19-4.24-4.25zM19 17.5c0 2.19-2.54 3.5-5 3.5-.55 0-1-.45-1-1s.45-1 1-1c1.54 0 3-.73 3-1.5 0-.47-.48-.87-1.23-1.2l1.48-1.48c1.07.63 1.75 1.47 1.75 2.68zM4.58 13.35C3.61 12.79 3 12.06 3 11c0-1.8 1.89-2.63 3.56-3.36C7.59 7.18 9 6.56 9 6c0-.41-.78-1-2-1-1.26 0-1.8.61-1.83.64-.35.41-.98.46-1.4.12-.41-.34-.49-.95-.15-1.38C3.73 4.24 4.76 3 7 3s4 1.32 4 3c0 1.87-1.93 2.72-3.64 3.47C6.42 9.88 5 10.5 5 11c0 .31.43.6 1.07.86l-1.49 1.49z"></path></svg>
          </button>
          </div>
          
    
          <div>
            <p class="mt-2 bold body1">Add Path SVG</p>
            <button class="icon large">
              <svg focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="Route"><path d="M19 15.18V7c0-2.21-1.79-4-4-4s-4 1.79-4 4v10c0 1.1-.9 2-2 2s-2-.9-2-2V8.82C8.16 8.4 9 7.3 9 6c0-1.66-1.34-3-3-3S3 4.34 3 6c0 1.3.84 2.4 2 2.82V17c0 2.21 1.79 4 4 4s4-1.79 4-4V7c0-1.1.9-2 2-2s2 .9 2 2v8.18c-1.16.41-2 1.51-2 2.82 0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82z"></path></svg>
            </button>
          </div>
    
          <div>
            <p class="mt-2 bold body1">Add Text SVG</p>
            <button class="icon large">
              <svg tabindex="-1" focusable="false" inert viewBox="0 0 24 24"><path d="M.99 19h2.42l1.27-3.58h5.65L11.59 19h2.42L8.75 5h-2.5zm4.42-5.61L7.44 7.6h.12l2.03 5.79zM20 11h3v2h-3v3h-2v-3h-3v-2h3V8h2z"></path></svg>
            </button>
          </div>
        </div>
      </div>
    </details>

    <section id="for-reference-below">
      <h3 class="bold bb-thick h2 mt-2">
        <a href="#svg-bascis" class="same-page fw-regular">For Reference for Tables Below:</a>
      </h3>
      <p class="h6 bold t-primary">Value Types:</p>
      <dl>
        <dt class="h6">length</dt>
        <dd>For SVG-specific properties defined in SVG1.1 and their corresponding presentation attributes, the unit identifiers in values are optional. If not provided, the length value represents a distance in the current user coordinate system. Length identifiers must be in lower case when used in presentation attributes for all properties whether they are defined in SVG or in CSS. This case sensitivity is relaxed in SVG2 to align with CSS.</dd>
        <pre class="bg-card">length ::= &lt;number&gt; (&lt;absolute-length&gt; | &lt;relative-length&gt;)?</pre>
        <dt class="h6">percentage</dt>
        <dd>Percentages are specified as a number followed by a "%" character:</dd>
        <pre class="bg-card ">
    percentage ::= number "%"</pre>
        <dt class="h6">number</dt>
        <dd>When used in an SVG attribute, a number  is defined differently, to allow numbers with large magnitudes to be specified more concisely:        </dd>
        <pre class="bg-card ">
    number ::= integer ([Ee] integer)?
    | [+-]? [0-9]* "." [0-9]+ ([Ee] integer)?</pre>
        <dt class="h6">auto</dt>
        <dd></dd>
      </dl>
    </section>

    <section id="basics-circles">
      <h3 class="h3 bold mt-2 bb">
        <a href="#basics-circles" class="same-page fw-regular">Circles</a>
      </h3>
      <div class="table-wrapper">
        <table cellspacing="0">
          <caption>Circles</caption>
          <thead>
            <tr>
              <th scope="col">Attribute:</th>
              <th scope="col">Attrbiute Description:</th>
              <th scope="col">Value Type:</th>
              <th scope="col">Animatable:</th>
              <th scope="col">Can Use CSS:</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td class="t-info bold">cx</td>
              <td>The x-axis coordinate of the center of the circle.</td>
              <td>length | percentage</td>
              <td>yes</td>
              <td>yes</td>
            </tr>
            <tr>
              <td class="t-info bold">cy</td>
              <td>The y-axis coordinate of the center of the circle.</td>
              <td>length | percentage</td>
              <td>yes</td>
              <td>yes</td>
            </tr>
            <tr>
              <td class="t-info bold">r</td>
              <td>The radius of the circle. A value lower or equal to zero disables rendering of the circle.</td>
              <td>length | percentage</td>
              <td>yes</td>
              <td>yes</td>
            </tr>
            <tr>
              <td class="t-info bold">pathLength</td>
              <td>The total length for the circle's circumference, in user units</td>
              <td>number</td>
              <td>yes</td>
              <td>no</td>
            </tr>
          </tbody>
        </table>
      </div>
      <div class="flex-row justify-center align-center mt-2">
        <svg width="400" height="100" class="mt-2" style="border: 1px solid var(--text-primary);">
          <circle cx="25" cy="25" r="25" fill="red"></circle>
          <circle cx="75" cy="25" r="15" fill="green"></circle>
          <circle cx="125" cy="70" r="17" fill="yellow"></circle>
          <circle cx="200" cy="50" r="50" fill="blue"></circle>
          <circle cx="200" cy="50" r="50" fill="blue"></circle>
          <circle cx="300" cy="25" r="25" fill="pink" stroke="red" stroke-width="1">
            <animate
            dur="10s"
            repeatCount="indefinite"
            values="300;200;100;0;100;0;150;200;300"
            keyTimes="0;0.1;0.15;0.2;0.7;0.8;0.9;0.95;1"
            attributeName="cx"
            />
            <animate
            dur="10s"
            repeatCount="indefinite"
            values="25;10;70;50;30;20;80;90;25"
            keyTimes="0;0.1;0.15;0.2;0.7;0.8;0.9;0.95;1"
            attributeName="cy"
            />
            <animate
            repeatCount="indefinite"
            dur="10s"
            values="25;15;5;0;10;15;30;40;25"
            keyTimes="0;0.1;0.15;0.2;0.7;0.8;0.9;0.95;1"
            attributeName="r"
            />
            <animate
            repeatCount="indefinite"
            dur="10s"
            values="pink;red;blue;black;purple;white;yellow;orange;pink"
            keyTimes="0;0.1;0.15;0.2;0.7;0.8;0.9;0.95;1"
            attributeName="fill"
            />
            <animate
            repeatCount="indefinite"
            dur="10s"
            values="25;15;5;0;10;15;30;40;25"
            values="red;blue;black;purple;white;yellow;orange;pink;green;red;"
            attributeName="stroke"
            />
            <animate
            repeatCount="indefinite"
            dur="10s"
            values="0;1;1.5;2;3;2;1;2;1"
            keyTimes="0;0.1;0.15;0.2;0.7;0.8;0.9;0.95;1"
            attributeName="stroke-width"
            />
          </circle>     
        </svg>
      </div>

    </section>


    <section id="basics-rectangles">
      <h3 class="h3 bold mt-2 bb">
        <a href="#basics-rectangles" class="same-page fw-regular">Rectangles</a>
      </h3>
      <div class="table-wrapper">
        <table cellspacing="0">
          <caption>Rectangles</caption>
          <thead>
            <tr>
              <th scope="col">Attribute:</th>
              <th scope="col">Attrbiute Description:</th>
              <th scope="col">Value Type:</th>
              <th scope="col">Animatable:</th>
              <th scope="col">Can Use CSS:</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td class="t-info bold">x</td>
              <td>The x coordinate of the rect.</td>
              <td>length | percentage</td>
              <td>yes</td>
              <td>yes</td>
            </tr>
            <tr>
              <td class="t-info bold">y</td>
              <td>The y coordinate of the rect.</td>
              <td>length | percentage</td>
              <td>yes</td>
              <td>yes</td>
            </tr>
            <tr>
              <td class="t-info bold">width</td>
              <td>The width of the rect.</td>
              <td>auto | length | percentage</td>
              <td>yes</td>
              <td>yes</td>
            </tr>
            <tr>
              <td class="t-info bold">height</td>
              <td>The height of the rect.</td>
              <td>auto | length | percentage</td>
              <td>yes</td>
              <td>yes</td>
            </tr>
            <tr>
              <td class="t-info bold">rx</td>
              <td>The horizontal corner radius of the rect.</td>
              <td>auto | length | percentage</td>
              <td>yes</td>
              <td>yes</td>
            </tr>
            <tr>
              <td class="t-info bold">ry</td>
              <td>The vertical corner radius of the rect.</td>
              <td>number</td>
              <td>auto | length | percentage</td>
              <td>yes</td>
            </tr>
            <tr>
              <td class="t-info bold">pathLength</td>
              <td>The total length of the rectangle's perimeter, in user units</td>
              <td>number</td>
              <td>yes</td>
              <td>no</td>
            </tr>
          </tbody>
        </table>
      </div>
      <div class="flex-row align-center justify-center mt-2">
        <svg width="400" height="200">
          <rect x="25" y="25" width="25" height="25" rx="0" ry="0" fill="white" stroke="red"></rect>
          <rect x="0" y="0" width="400" height="200" rx="2" ry="0" fill="transparent" stroke="white" stroke-width="5"></rect>
          <rect x="300" y="25" width="75" height="50" fill="transparent" stroke="magenta" stroke-width="10"></rect>
          <rect x="300" y="75" width="25" height="100" rx="20" ry="20" fill="purple" stroke="white" stroke-width="5"></rect>
          <rect x="50" y="95" width="200" height="100" rx="10" ry="10" fill="yellow" stroke="blue" stroke-width="5">
            <animateTransform
              attributeName="transform"
              attributeType="XML"
              type="rotate"
              from="0 50 95"
              to="360 50 95"
              dur="5s"
              repeatCount="indefinite" 
            />
            <animateMotion
              dur="5s"
              repeatCount="indefinite"
              path="M20,50 C20,-50 180,150 180,50 C180-50 20,150 20,50 z" 
            />
          </rect>
        </svg>
      </div>
    </section>

    <section id="basics-ellipse">
      <h3 class="h3 bold mt-2 bb">
        <a href="#basics-ellipse" class="same-page fw-regular">Ellipse</a>
      </h3>
      <div class="table-wrapper">
        <table cellspacing="0">
          <caption>Ellipses</caption>
          <thead>
            <tr>
              <th scope="col">Attribute:</th>
              <th scope="col">Attrbiute Description:</th>
              <th scope="col">Value Type:</th>
              <th scope="col">Animatable:</th>
              <th scope="col">Can Use CSS:</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td class="t-info bold">cx</td>
              <td>The x position of the center of the ellipse. </td>
              <td>length | percentage</td>
              <td>yes</td>
              <td>yes</td>
            </tr>
            <tr>
              <td class="t-info bold">cy</td>
              <td>The y position of the center of the ellipse. </td>
              <td>length | percentage</td>
              <td>yes</td>
              <td>yes</td>
            </tr>
            <tr>
              <td class="t-info bold">rx</td>
              <td>The radius of the ellipse on the x axis.</td>
              <td>auto | length | percentage</td>
              <td>yes</td>
              <td>yes</td>
            </tr>
            <tr>
              <td class="t-info bold">ry</td>
              <td>The radius of the ellipse on the y axis.</td>
              <td>auto | length | percentage</td>
              <td>yes</td>
              <td>yes</td>
            </tr>
            <tr>
              <td class="t-info bold">pathLength</td>
              <td>This attribute lets specify the total length for the path, in user units</td>
              <td>number</td>
              <td>no</td>
              <td>yes</td>
            </tr>
          </tbody>
        </table>
       </div>
      <svg width="400" height="200" class="mt-2" style="border:1px solid var(--divider); margin: 12px auto!important; display: block;">
        <ellipse cx="100" cy="50" rx="50" ry="30" fill="var(--primary)">
          <animate
          dur="3s"
          repeatCount="indefinite"
          values="150;100;80;40;0;40;80;100;140;120"
          keyTimes="0;0.2;0.3;0.4;0.5;0.6;0.7;0.8;0.9;1"
          attributeName="rx"
          />
          <animate
          dur="3s"
          repeatCount="indefinite"
          values="50;60;70;80;90;100;90;80;70;60"
          keyTimes="0;0.2;0.3;0.4;0.5;0.6;0.7;0.8;0.9;1"
          attributeName="ry"
          />
          <animate
          dur="3s"
          repeatCount="indefinite"
          values="200;180;160;140;120;140;160;180;200;200"
          keyTimes="0;0.2;0.3;0.4;0.5;0.6;0.7;0.8;0.9;1"
          attributeName="cx"
          />
          <animate
          dur="3s"
          repeatCount="indefinite"
          values="50;60;70;80;90;100;90;80;70;50"
          keyTimes="0;0.2;0.3;0.4;0.5;0.6;0.7;0.8;0.9;1"
          attributeName="cy"
          />
        </ellipse>
        <ellipse cx="200" cy="100" rx="25" ry="60" fill="red" stroke="white" stroke-width="5"></ellipse>
        <ellipse cx="300" cy="75" rx="20" ry="20" fill="green" stroke="red" stroke-width="3"></ellipse>

      </svg>
    </section>



    <section id="basics-line">
      <h3 class="h3 bold mt-2 bb">
        <a href="#basics-line" class="same-page fw-regular">Line</a>
      </h3>
      <div class="table-wrapper">
        <table cellspacing="0">
          <caption>Lines</caption>
          <thead>
            <tr>
              <th scope="col">Attribute:</th>
              <th scope="col">Attrbiute Description:</th>
              <th scope="col">Value Type:</th>
              <th scope="col">Animatable:</th>
              <th scope="col">Can Use CSS:</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td class="t-info bold">x1</td>
              <td>Defines the x-axis coordinate of the line starting point.</td>
              <td>length | percentage | number</td>
              <td>yes</td>
              <td>no</td>
            </tr>
            <tr>
              <td class="t-info bold">x2</td>
              <td>Defines the x-axis coordinate of the line ending point.</td>
              <td>length | percentage | number</td>
              <td>yes</td>
              <td>no</td>
            </tr>
            <tr>
              <td class="t-info bold">y1</td>
              <td>Defines the y-axis coordinate of the line starting point.</td>
              <td>length | percentage | number</td>
              <td>yes</td>
              <td>no</td>
            </tr>
            <tr>
              <td class="t-info bold">y2</td>
              <td>Defines the y-axis coordinate of the line ending point. </td>
              <td>length | percentage | number</td>
              <td>yes</td>
              <td>no</td>
            </tr>
            <tr>
              <td class="t-info bold">pathLength</td>
              <td>Defines the total path length in user units.</td>
              <td>number</td>
              <td>yes</td>
              <td>no</td>
            </tr>
          </tbody>
        </table>
      </div>
      <svg width="400" height="200" class="mt-2" style="border:1px solid var(--divider); margin: 12px auto!important; display: block;">
        <line x1="10" x2="390" y1="190" y2="10" stroke="var(--error)" stroke-width="5">
          <animateTransform
          attributeName="transform"
          attributeType="XML"
          type="rotate"
          from="0"
          to="360"
          dur="3s"
          repeatCount="indefinite" 
          />
          <animate
          dur="3s"
          repeatCount="indefinite"
          values="10;390;10"
          keyTimes="0;0.5;1"
          attributeName="x1"
          />
          <animate
          dur="3s"
          repeatCount="indefinite"
          values="390;10;390"
          keyTimes="0;0.5;1"
          attributeName="x2"
          />
          <animate
          dur="3s"
          repeatCount="indefinite"
          values="10;190;10"
          keyTimes="0;0.5;1"
          attributeName="y2"
          />
          <animate
          dur="3s"
          repeatCount="indefinite"
          values="190;10;190"
          keyTimes="0;0.5;1"
          attributeName="y1"
          />
        </line>
        <line x1="0" x2="400" y1="100" y2="100" stroke="var(--text-primary)" stroke-width="5">
          <animate
          dur="3s"
          repeatCount="indefinite"
          values="400;200;0;200;400"
          keyTimes="0;0.25;0.5;0.75;1"
          attributeName="x2"
          />
        </line>
        <line x1="10" x2="390" y1="10" y2="190" stroke="var(--warning)" stroke-width="5">
          <animateTransform
          attributeName="transform"
          attributeType="XML"
          type="rotate"
          from="360"
          to="0"
          dur="3s"
          repeatCount="indefinite" 
          />
          <animate
          dur="3s"
          repeatCount="indefinite"
          values="10;390;10"
          keyTimes="0;0.5;1"
          attributeName="x1"
          />
          <animate
          dur="3s"
          repeatCount="indefinite"
          values="390;10;390"
          keyTimes="0;0.5;1"
          attributeName="x2"
          />
          <animate
          dur="3s"
          repeatCount="indefinite"
          values="10;190;10"
          keyTimes="0;0.5;1"
          attributeName="y1"
          />
          <animate
          dur="3s"
          repeatCount="indefinite"
          values="190;10;190"
          keyTimes="0;0.5;1"
          attributeName="y2"
          />
        </line>
      </svg>
    </section>

    <section id="basics-polyline">
      <h3 class="h3 bold mt-2 bb">
        <a href="#basics-polyline" class="same-page fw-regular">Polyline</a>
      </h3>
      <div class="table-wrapper">
        <table cellspacing="0">
          <caption>Polylines</caption>
          <thead>
            <tr>
              <th scope="col">Attribute:</th>
              <th scope="col">Attrbiute Description:</th>
              <th scope="col">Value Type:</th>
              <th scope="col">Animatable:</th>
              <th scope="col">Can Use CSS:</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td class="t-info bold">points</td>
              <td>This attribute defines the list of points (pairs of x,y absolute coordinates) required to draw the polyline.</td>
              <td>number</td>
              <td>yes</td>
              <td>no</td>
            </tr>
            <tr>
              <td class="t-info bold">pathLength</td>
              <td>This attribute lets specify the total length for the path, in user units.</td>
              <td>number</td>
              <td>yes</td>
              <td>no</td>
            </tr>
          </tbody>
        </table>
      </div>
      <svg width="400" height="200" style="border:1px solid var(--divider); margin: 12px auto!important; display: block;">
        <polyline points="60, 110 65, 120 70, 115 75, 130 80, 125 85, 140 90, 135 95, 150 100, 145" fill="white" ></polyline>
        <polyline points="0,100 50,25 50,75 100,0" fill="yellow"></polyline>
        <%# Example of the same polyline shape with stroke and no fill %>
        <polyline points="100,100 150,25 150,75 200,0" fill="none" stroke="black"></polyline>
      </svg>
    </section>

    <section id="basics-polygon">
      <h3 class="h3 bold mt-2 bb">
        <a href="#basics-polygon" class="same-page fw-regular">Polygon</a>
      </h3>
      <div class="table-wrapper">
        <table cellspacing="0">
          <caption>Polygon</caption>
          <thead>
            <tr>
              <th scope="col">Attribute:</th>
              <th scope="col">Attrbiute Description:</th>
              <th scope="col">Value Type:</th>
              <th scope="col">Animatable:</th>
              <th scope="col">Can Use CSS:</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td class="t-info bold">points</td>
              <td>This attribute defines the list of points (pairs of x,y absolute coordinates) required to draw the polygon.</td>
              <td>number</td>
              <td>yes</td>
              <td>no</td>
            </tr>
            <tr>
              <td class="t-info bold">pathLength</td>
              <td>This attribute lets specify the total length for the path, in user units.</td>
              <td>number</td>
              <td>yes</td>
              <td>no</td>
            </tr>
          </tbody>
        </table>
      </div>
      <svg width="400" height="220" style="border:1px solid var(--divider); margin: 12px auto!important; display: block;">
        <polygon points="50, 160 55, 180 70, 180 60, 190 65, 205 50, 195 35, 205 40, 190 30, 180 45, 180"></polygon>
        <path scale="2" xmlns="http://www.w3.org/2000/svg" d="m 4 8 l 6 -7 l 3 -1 l -1 3 l -7 6 c 1 1 1 2 2 1 c 0 1 1 2 0 2 a 1.42 1.42 0 0 1 -1 1 a 5 5 0 0 0 -2 -3 q -0.5 -0.1 -0.5 0.5 t -1.5 1.3 t -0.8 -0.8 t 1.3 -1.5 t 0.5 -0.5 a 5 5 90 0 0 -3 -2 a 1.42 1.42 0 0 1 1 -1 c 0 -1 1 0 2 0 c -1 1 0 1 1 2 m 6 -7 l 0 2 l 2 0 l -1.8 -0.2 l -0.2 -1.8" fill="#aa99aa"></path>
      </svg>
    </section>

    <section id="basics-path">
      <h3 class="h3 bold mt-2 bb">
        <a href="#basics-path" class="same-page fw-regular">Path</a>
      </h3>
      <div class="table-wrapper">
        <table cellspacing="0">
          <caption>Path</caption>
          <thead>
            <tr>
              <th scope="col">Attribute:</th>
              <th scope="col">Attrbiute Description:</th>
              <th scope="col">Value Type:</th>
              <th scope="col">Animatable:</th>
              <th scope="col">Can Use CSS:</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td class="t-info bold">d</td>
              <td>This attribute defines the shape of the path.</td>
              <td>string</td>
              <td>yes</td>
              <td>no</td>
            </tr>
            <tr>
              <td class="t-info bold">pathLength</td>
              <td>This attribute lets specify the total length for the path, in user units.</td>
              <td>number</td>
              <td>yes</td>
              <td>no</td>
            </tr>
          </tbody>
        </table>
      </div>
      <svg width="400" height="250" style="border:1px solid var(--divider); margin: 12px auto!important; display: block;">
        <path d="M200,100 Q40,205 50,230 T90,230" fill="none" stroke="blue" stroke-width="5"></path>
        <path
        d="M 10,30
                A 20,20 0,0,1 50,30
                A 20,20 0,0,1 90,30
                Q 90,60 50,90
                Q 10,60 10,30 z" />
      </svg>
    </section>


    <section id="basics-text">
      <h3 class="h3 bold mt-2 bb">
        <a href="#basics-text" class="same-page fw-regular">Text</a>
      </h3>
      <div class="table-wrapper">
        <table cellspacing="0">
          <caption>Text</caption>
          <thead>
            <tr>
              <th scope="col">Attribute:</th>
              <th scope="col">Attrbiute Description:</th>
              <th scope="col">Value Type:</th>
              <th scope="col">Animatable:</th>
              <th scope="col">Can Use CSS:</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td class="t-info bold">x</td>
              <td>The x coordinate of the starting point of the text baseline</td>
              <td>length | percentage</td>
              <td>yes</td>
              <td>no</td>
            </tr>
            <tr>
              <td class="t-info bold">y</td>
              <td>The y coordinate of the starting point of the text baseline.</td>
              <td>length | percentage</td>
              <td>yes</td>
              <td>no</td>
            </tr>
            <tr>
              <td class="t-info bold">dx</td>
              <td>Shifts the text position horizontally from a previous text element.</td>
              <td>length | percentage</td>
              <td>yes</td>
              <td>no</td>
            </tr>
            <tr>
              <td class="t-info bold">dy</td>
              <td>Shifts the text position vertically from a previous text element.</td>
              <td>length | percentage</td>
              <td>yes</td>
              <td>no</td>
            </tr>
            <tr>
              <td class="t-info bold">rotate</td>
              <td>Rotates orientation of each individual glyph.</td>
              <td>list-of-number</td>
              <td>yes</td>
              <td>no</td>
            </tr>
            <tr>
              <td class="t-info bold">lengthAdjust</td>
              <td>How the text is stretched or compressed to fit the width defined by the textLength attribute.</td>
              <td>spacing|spacingAndGlyphs</td>
              <td>yes</td>
              <td>no</td>
            </tr>
            <tr>
              <td class="t-info bold">textLength</td>
              <td>A width that the text should be scaled to fit.</td>
              <td>length | percentage</td>
              <td>yes</td>
              <td>no</td>
            </tr>
          </tbody>
        </table>
      </div>
      <svg viewBox="0 0 240 80" class="mt-2" style="border:1px solid var(--divider); margin: 12px auto!important; display: block;" xmlns="http://www.w3.org/2000/svg">
        <style>
          .small {
            font: italic 13px sans-serif;
          }
          .heavy {
            font: bold 30px sans-serif;
          }
      
          /* Note that the color of the text is set with the    *
           * fill property, the color property is for HTML only */
          .Rrrrr {
            font: italic 40px serif;
            fill: red;
          }
        </style>
      
        <text x="20" y="35" class="small">My</text>
        <text x="40" y="35" class="heavy">cat</text>
        <text x="55" y="55" class="small">is</text>
        <text x="65" y="55" class="Rrrrr">Grumpy!</text>
      </svg>
    </section>
  </section>


  <section id="presentation-attributes">
    <h2 class="bold bb-thick h2 mt-2">
      <a href="#presentation-attributes" class="same-page fw-regular">Presentation Attributes</a>
    </h2>
    <div class="table-wrapper">
      <table cellspacing="0" class="mt-2">
        <caption>Presentation Attributes</caption>
        <thead>
          <tr>
            <th scope="col">Attribute Name:</th>
            <th scope="col">Description:</th>
            <th scope="col">Value:</th>
            <th scope="col">Animateable:</th>
            <th scope="col">Circle:</th>
            <th scope="col">Rectangle:</th>
            <th scope="col">Ellipse:</th>
            <th scope="col">Line:</th>
            <th scope="col">Polyline:</th>
            <th scope="col">Polygon:</th>
            <th scope="col">Path:</th>
            <th scope="col">Text:</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td class="bold t-info">alignment-baseline</td>
            <td>It specifies how an object is aligned along the font baseline with respect to its parent. </td>
            <td>Value: auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">baseline-shift</td>
            <td>It allows repositioning of the dominant-baseline relative to the dominant-baseline of the parent text content element. </td>
            <td>Value: auto|baseline|super|sub|<percentage>|<length>|inherit</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">clip 
            Deprecated</td>
            <td>It defines what portion of an element is visible. </td>
            <td>Value: auto|<shape>|inherit</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">clip-path</td>
            <td>It binds the element it is applied to with a given <clipPath> element. </td>
            <td>Value: none|<FuncIRI>|inherit</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">clip-rule</td>
            <td>It indicates how to determine what side of a path is inside a shape in order to know how a <clipPath> should clip its target. </td>
            <td>Value: nonzero|evenodd|inherit</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">color</td>
            <td>It provides a potential indirect value (currentcolor) for the fill, stroke, stop-color, flood-color and lighting-color presentation attributes. </td>
            <td>Value: <color>|inherit</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">color-interpolation</td>
            <td>It specifies the color space for gradient interpolations, color animations, and alpha compositing. </td>
            <td>Value: auto|sRGB|linearRGB|inherit</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">color-interpolation-filters</td>
            <td>It specifies the color space for imaging operations performed via filter effects. </td>
            <td>Value: auto|sRGB|linearRGB|inherit</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">color-profile 
            Deprecated</td>
            <td>It defines which color profile a raster image included through the <image> element should use. </td>
            <td>Value: auto|sRGB|linearRGB|<name>|<IRI>|inherit</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">color-rendering</td>
            <td>It provides a hint to the browser about how to optimize its color interpolation and compositing operations. </td>
            <td>Value: auto|optimizeSpeed|optimizeQuality|inherit</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">cursor</td>
            <td>It specifies the mouse cursor displayed when the mouse pointer is over an element. </td>
            <td>Value: <FuncIRI>|<keywords>|inherit</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">d</td>
            <td>It defines a path to be drawn. </td>
            <td>Value: path()|non</td>
            <td>e</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">direction</td>
            <td>It specifies the base writing direction of text. </td>
            <td>Value: ltr|rtl|inherit</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">display</td>
            <td>It allows to control the rendering of graphical or container elements. </td>
            <td>Value: see CSS display</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">dominant-baseline</td>
            <td>It defines the baseline used to align the box's text and inline-level contents. </td>
            <td>Value: auto|text-bottom|alphabetic|ideographic|middle|central| mathematical|hanging|text-top</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">enable-background 
            Deprecated</td>
            <td>It tells the browser how to manage the accumulation of the background image. </td>
            <td>Value: accumulate|new|inherit</td>
            <td>; Animatable: No</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">fill</td>
            <td>It defines the color of the inside of the graphical element it applies to. </td>
            <td>Value: <paint></td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">fill-opacity</td>
            <td>It specifies the opacity of the color or the content the current object is filled with. </td>
            <td>Value: <number>|<percentage></td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">fill-rule</td>
            <td>It indicates how to determine what side of a path is inside a shape. </td>
            <td>Value: nonzero|evenodd|inherit</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">filter</td>
            <td>It defines the filter effects defined by the <filter> element that shall be applied to its element. </td>
            <td>Value: <FuncIRI>|none|inherit</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">flood-color</td>
            <td>It indicates what color to use to flood the current filter primitive subregion defined through the <feFlood> or <feDropShadow> element. </td>
            <td>Value: <color></td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">flood-opacity</td>
            <td>It indicates the opacity value to use across the current filter primitive subregion defined through the <feFlood> or <feDropShadow> element. </td>
            <td>Value: <number>|<percentage></td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">font-family</td>
            <td>It indicates which font family will be used to render the text of the element. </td>
            <td>Value: see CSS font-family</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
            <td class="bold t-info">font-size</td>
            <td>It specifies the size of the font. </td>
            <td>Value: see CSS font-size</td>
            <td>; Animatable: Yes</td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            </tr>
            <tr>
              <td class="bold t-info">font-size-adjust</td>
              <td>It specifies that the font size should be chosen based on the height of lowercase letters rather than the height of capital letters. </td>
              <td>Value: <number>|none|inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">font-stretch</td>
              <td>It selects a normal, condensed, or expanded face from a font. </td>
              <td>Value: see CSS font-stretch</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">font-style</td>
              <td>It specifies whether a font should be styled with a normal, italic, or oblique face from its font-family. </td>
              <td>Value: normal|italic|oblique</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">font-variant</td>
              <td>It specifies whether a font should be used with some of their variation such as small caps or ligatures. </td>
              <td>Value: see CSS font-variant</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">font-weight</td>
              <td>It specifies the weight (or boldness) of the font. </td>
              <td>Value: normal|bold|lighter|bolder|100|200|300|400|500|600|700|800|900</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">glyph-orientation-horizontal 
              Deprecated</td>
              <td>It controls glyph orientation when the inline-progression-direction is horizontal. </td>
              <td>Value: <angle>|inherit</td>
              <td>; Animatable: No</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">glyph-orientation-vertical 
              Deprecated</td>
              <td>It controls glyph orientation when the inline-progression-direction is vertical. </td>
              <td>Value: auto|<angle>|inherit</td>
              <td>; Animatable: No</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">image-rendering</td>
              <td>It provides a hint to the browser about how to make speed vs. quality tradeoffs as it performs image processing. </td>
              <td>Value: auto|optimizeQuality|optimizeSpeed</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">kerning 
              Deprecated</td>
              <td>It indicates whether the browser should adjust inter-glyph spacing. </td>
              <td>Value: auto|<length>|inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">letter-spacing</td>
              <td>It controls spacing between text characters. </td>
              <td>Value: normal|<length>|inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">lighting-color</td>
              <td>It defines the color of the light source for filter primitives elements <feDiffuseLighting> and <feSpecularLighting>. </td>
              <td>Value: <color></td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">marker-end</td>
              <td>It defines the arrowhead or polymarker that will be drawn at the final vertex of the given <path> element or basic shape. </td>
              <td>Value: <FuncIRI>|none|inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">marker-mid</td>
              <td>It defines the arrowhead or polymarker that will be drawn at every vertex other than the first and last vertex of the given <path> element or basic shape. </td>
              <td>Value: <FuncIRI>|none|inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">marker-start</td>
              <td>It defines the arrowhead or polymarker that will be drawn at the first vertex of the given <path> element or basic shape. </td>
              <td>Value: <FuncIRI>|none|inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">mask</td>
              <td>It alters the visibility of an element by either masking or clipping the image at specific points. </td>
              <td>Value: see CSS mask</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">opacity</td>
              <td>It specifies the transparency of an object or a group of objects. </td>
              <td>Value: <opacity-value></td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">overflow</td>
              <td>Specifies whether the content of a block-level element is clipped when it overflows the element's box. </td>
              <td>Value: visible|hidden|scroll|auto|inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">pointer-events</td>
              <td>Defines whether or when an element may be the target of a mouse event. </td>
              <td>Value: bounding-box|visiblePainted|visibleFill|visibleStroke|visible |painted|fill|stroke|all|none</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">shape-rendering</td>
              <td>Hints about what tradeoffs to make as the browser renders <path> element or basic shapes. </td>
              <td>Value: auto|optimizeSpeed|crispEdges|geometricPrecision |inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">solid-color</td>
              <td>- </td>
              <td>Value:</td>
              <td>; Animatable: -</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">solid-opacity</td>
              <td>- </td>
              <td>Value:</td>
              <td>; Animatable: -</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">stop-color</td>
              <td>Indicates what color to use at that gradient stop. </td>
              <td>Value: currentcolor|<color>|<icccolor>|inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">stop-opacity</td>
              <td>Defines the opacity of a given gradient stop. </td>
              <td>Value: <opacity-value>|inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">stroke</td>
              <td>Defines the color used to paint the outline of the shape. </td>
              <td>Value: <paint></td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">stroke-dasharray</td>
              <td>Defines the pattern of dashes and gaps used to paint the outline of the shape. </td>
              <td>Value: none|<dasharray></td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">stroke-dashoffset</td>
              <td>Defines an offset on the rendering of the associated dash array. </td>
              <td>Value: <percentage>|<length></td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">stroke-linecap</td>
              <td>Defines the shape to be used at the end of open subpaths when they are stroked. </td>
              <td>Value: butt|round|square</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">stroke-linejoin</td>
              <td>Defines the shape to be used at the corners of paths when they are stroked. </td>
              <td>Value: arcs|bevel|miter|miter-clip|round</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">stroke-miterlimit</td>
              <td>Defines a limit on the ratio of the miter length to the stroke-width used to draw a miter join. </td>
              <td>Value: <number></td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">stroke-opacity</td>
              <td>Defines the opacity of the stroke of a shape. </td>
              <td>Value: <opacity-value>|<percentage></td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">stroke-width</td>
              <td>Defines the width of the stroke to be applied to the shape. </td>
              <td>Value: <length>|<percentage></td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">text-anchor</td>
              <td>Defines the vertical alignment a string of text. </td>
              <td>Value: start|middle|end|inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">text-decoration</td>
              <td>Sets the appearance of decorative lines on text. </td>
              <td>Value: none|underline|overline|line-through|blink|inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">text-rendering</td>
              <td>Hints about what tradeoffs to make as the browser renders text. </td>
              <td>Value: auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">transform</td>
              <td>Defines a list of transform definitions that are applied to an element and the element's children. </td>
              <td>Value: <transform-list></td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">unicode-bidi</td>
              <td>- </td>
              <td>Value:</td>
              <td>; Animatable: -</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">vector-effect</td>
              <td>Specifies the vector effect to use when drawing an object. </td>
              <td>Value: default|non-scaling-stroke|inherit|<uri></td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">visibility</td>
              <td>Lets you control the visibility of graphical elements. </td>
              <td>Value: visible|hidden|collapse|inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">word-spacing</td>
              <td>Specifies spacing behavior between words. </td>
              <td>Value: <length>|inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td class="bold t-info">writing-mode</td>
              <td>Specifies whether the initial inline-progression-direction for a <text> element shall be left-to-right, right-to-left, or top-to-bottom. </td>
              <td>Value: lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit</td>
              <td>; Animatable: Yes</td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
              <td></td>
            </tr>
            
        </tbody>
      </table>
    </div>
  </section>
  <%-include('../../partials/pagePartial')%>
<%}%>
