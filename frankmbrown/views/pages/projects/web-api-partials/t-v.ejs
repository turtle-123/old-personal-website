<section id="id_1363b4dd-afee-43e1-8677-b084d81ffb15" class="mt-4">
    <div class="flex-row bb-thick justify-between"><h2 class="bold h2"><a href="#id_1363b4dd-afee-43e1-8677-b084d81ffb15" class="same-page bold">Touch Event</a></h2>
        <button type="button" class="small icon-text text warning" data-hide-show="" data-el="#id_8b6bb30c-16ce-40e4-9c06-d62829066a99">
        <svg data-arrow="" focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="KeyboardArrowUp"><path d="M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z"></path></svg>
        <span data-hide="">HIDE</span>
        <span data-show="" hidden="">SHOW</span>
        </button>
    </div>
    <div id="id_8b6bb30c-16ce-40e4-9c06-d62829066a99" class="mt-2">
        <ul><li><a class="secondary link" target="_blank" href="https://developer.mozilla.org//en-US/docs/Web/API/Touch_events">Touch Event Reference</a></li></ul>
        <blockquote class="blockquote mt-2">
            To provide quality support for touch based user interfaces, touch events offer the ability to interpret finger (or stylus) activity on touch screens or trackpads. 
        </blockquote>
        <p class="mt-2">
            The touch events interfaces are relatively low-level APIs that can be used to support application-specific multi-touch interactions such as a two-finger gesture. Touch events are similar to mouse events except they support simultaneous touches and at different locations on the touch surface. 
        </p>
         
    </div>
</section>
<section id="id_f02144df-ebc6-4239-bd4d-0cd4395b44ae" class="mt-4">
    <div class="flex-row bb-thick justify-between"><h2 class="bold h2"><a href="#id_f02144df-ebc6-4239-bd4d-0cd4395b44ae" class="same-page bold">Trusted Types API</a></h2>
        <button type="button" class="small icon-text text warning" data-hide-show="" data-el="#id_d526a4c0-a88c-41a6-b379-725ddadb13fc">
        <svg data-arrow="" focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="KeyboardArrowUp"><path d="M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z"></path></svg>
        <span data-hide="">HIDE</span>
        <span data-show="" hidden="">SHOW</span>
        </button>
    </div>
    <div id="id_d526a4c0-a88c-41a6-b379-725ddadb13fc" class="mt-2">
        <ul><li><a class="secondary link" target="_blank" href="https://developer.mozilla.org//en-US/docs/Web/API/Trusted_Types_API">Trusted Types API Reference</a></li></ul>
        <blockquote class="blockquote mt-2">
            The <strong>Trusted Types API</strong> gives web developers a way to lock down the insecure parts of the DOM API to prevent client-side Cross-site scripting (XSS) attacks.
        </blockquote>
        <p class="mt-2">
            Client-side, or DOM-based, XSS attacks happen when data controlled by a user reaches a function that can execute that data. These functions are known as <em>injection sinks</em>. DOM-bases XSS attacks happen when a user is able to write arbitrary JavaScript code and have it executed by one of these functions. The Trusted Types API locks down risky injection sinks, requiring you to process the data before passing it to one of these functions. Trusted types works alongside Content-Security-Policy wth the <span class="text-code">trusted-types</span> and <span class="text-code">require-trusted-types-for</span> directives. 
        </p>
         
    </div>
</section>
<section id="id_cb37e588-0939-48cd-bb8d-6a8d43ea8cde" class="mt-4">
    <div class="flex-row bb-thick justify-between"><h2 class="bold h2"><a href="#id_cb37e588-0939-48cd-bb8d-6a8d43ea8cde" class="same-page bold">UI Event</a></h2>
        <button type="button" class="small icon-text text warning" data-hide-show="" data-el="#id_55484de0-084c-4caa-a795-825aaac84478">
        <svg data-arrow="" focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="KeyboardArrowUp"><path d="M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z"></path></svg>
        <span data-hide="">HIDE</span>
        <span data-show="" hidden="">SHOW</span>
        </button>
    </div>
    <div id="id_55484de0-084c-4caa-a795-825aaac84478" class="mt-2">
        <ul><li><a class="secondary link" target="_blank" href="https://developer.mozilla.org//en-US/docs/Web/API/UI_Events">UI Event Reference</a></li></ul>
        <blockquote class="blockquote mt-2">
            The UI Events API defines a system for handling user interactions such as mouse and keyboard input. This includes:
        </blockquote>
        <ul>
            <li>Events that are fired on specific user actions such as keypresses or mouse clicks/</li>
            <li>Event interfaces, which are passes into handlers for these events.</li>
        </ul>
         
    </div>
</section>
<section id="id_2a5c7cf0-2e8b-4a94-9884-564eaa488e5d" class="mt-4">
    <div class="flex-row bb-thick justify-between"><h2 class="bold h2"><a href="#id_2a5c7cf0-2e8b-4a94-9884-564eaa488e5d" class="same-page bold">URL API</a></h2>
        <button type="button" class="small icon-text text warning" data-hide-show="" data-el="#id_1691d6f1-bb5a-43e6-bc92-7ab474d1f914">
        <svg data-arrow="" focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="KeyboardArrowUp"><path d="M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z"></path></svg>
        <span data-hide="">HIDE</span>
        <span data-show="" hidden="">SHOW</span>
        </button>
    </div>
    <div id="id_1691d6f1-bb5a-43e6-bc92-7ab474d1f914" class="mt-2">
        <ul><li><a class="secondary link" target="_blank" href="https://developer.mozilla.org//en-US/docs/Web/API/URL_API">URL API Reference</a></li></ul>
        <blockquote class="blockquote mt-2">
            The URL API is a component of the URL standard, which defines what constitutes a valid <a class="secondary link" target="_blank" href="https://developer.mozilla.org//en-US/docs/Web/API/URL_API">Uniform Resource Locator</a> and API that accesses and manipulates URLs. The URL standard also defines concepts such as domains, hosts, and IP addresses, and also attempts to describe in a standard way the legacy <span class="text-code">application/x-www-urlencoded</span> MIME type used to submit web forms' content.
        </blockquote>
         
    </div>
</section>
<section id="id_99de1b9b-ad06-428e-a099-095de6b55ebc" class="mt-4">
    <div class="flex-row bb-thick justify-between"><h2 class="bold h2"><a href="#id_99de1b9b-ad06-428e-a099-095de6b55ebc" class="same-page bold">URL Fragment Text Directive</a></h2>
        <button type="button" class="small icon-text text warning" data-hide-show="" data-el="#id_f1e97716-2787-4ca0-87fa-3529551479d1">
        <svg data-arrow="" focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="KeyboardArrowUp"><path d="M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z"></path></svg>
        <span data-hide="">HIDE</span>
        <span data-show="" hidden="">SHOW</span>
        </button>
    </div>
    <div id="id_f1e97716-2787-4ca0-87fa-3529551479d1" class="mt-2">
        <ul><li><a class="secondary link" target="_blank" href="https://developer.mozilla.org//en-US/docs/Web/API/URL_Fragment_Text_Directives">URL Fragment Text Directive Reference</a></li></ul>
        <blockquote class="blockquote mt-2">
            The <strong>URL fragment text directives</strong> API allows web apps to interact with <em>text fragments</em>. <a class="secondary link" target="_blank" href="https://developer.mozilla.org//en-US/docs/Web/API/URL_Fragment_Text_Directives">Text fragments</a> allow linking directly to a specific portion of text in a web document, without requiring the author to annotate it with an ID, using a particular syntax in the URL fragment.  
        </blockquote>
         
    </div>
</section>
<section id="id_7178ba3b-3559-4e77-855e-b801389c5728" class="mt-4">
    <div class="flex-row bb-thick justify-between"><h2 class="bold h2"><a href="#id_7178ba3b-3559-4e77-855e-b801389c5728" class="same-page bold">URL Pattern API</a></h2>
        <button type="button" class="small icon-text text warning" data-hide-show="" data-el="#id_89c573d4-4756-4b00-a1d4-981b12931823">
        <svg data-arrow="" focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="KeyboardArrowUp"><path d="M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z"></path></svg>
        <span data-hide="">HIDE</span>
        <span data-show="" hidden="">SHOW</span>
        </button>
    </div>
    <div id="id_89c573d4-4756-4b00-a1d4-981b12931823" class="mt-2">
        <ul><li><a class="secondary link" target="_blank" href="https://developer.mozilla.org//en-US/docs/Web/API/URL_Pattern_API">URL Pattern API Reference</a></li></ul>
        <blockquote class="blockquote mt-2">
            The <strong>URL Pattern API</strong> defines a syntax that us used to create URL pattern matchers. These patterns can be matched against URLs or individual URL components. The URL Pattern API is used by the <span class="text-code">URLPattern</span> interface.
        </blockquote>
        <p class="mt-2">
            The pattern syntax is based on the syntax from the <a class="secondary link" target="_blank" href="https://github.com/pillarjs/path-to-regexp">path-to-regexp</a> library. 
        </p>
         
    </div>
</section>
<section id="id_3d2081d4-aa4b-46e4-811f-ca5c4eecfc9d" class="mt-4">
    <div class="flex-row bb-thick justify-between"><h2 class="bold h2"><a href="#id_3d2081d4-aa4b-46e4-811f-ca5c4eecfc9d" class="same-page bold">User-Agent Client Hints API</a></h2>
        <button type="button" class="small icon-text text warning" data-hide-show="" data-el="#id_dca6381b-5920-4fab-ac9c-2aaffd3bd496">
        <svg data-arrow="" focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="KeyboardArrowUp"><path d="M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z"></path></svg>
        <span data-hide="">HIDE</span>
        <span data-show="" hidden="">SHOW</span>
        </button>
    </div>
    <div id="id_dca6381b-5920-4fab-ac9c-2aaffd3bd496" class="mt-2">
        <ul><li><a class="secondary link" target="_blank" href="https://developer.mozilla.org//en-US/docs/Web/API/User-Agent_Client_Hints_API">User-Agent Client Hints API Reference</a></li></ul>
        <blockquote class="blockquote mt-2">
            The <strong>User Agent Client Hints API</strong> exteds <a class="secondary link" target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Client_hints">Client Hints</a> to provide a way of exposing browser and platform information via User-Agent response and request headers, and a JavScript API.
        </blockquote>
        <p class="mt-2">
            Parsing the User-Agent string has historically been the way to get information about the user's browser or device. User agent Client Hints aims to provide this information in a more privacy preserving way by enforcing a model where the server requests a set of information. The browser decides what to return. 
        </p>
         
    </div>
</section>
<section id="id_294db2d4-5876-4101-b173-52499f80dd47" class="mt-4">
    <div class="flex-row bb-thick justify-between"><h2 class="bold h2"><a href="#id_294db2d4-5876-4101-b173-52499f80dd47" class="same-page bold">Vibration API</a></h2>
        <button type="button" class="small icon-text text warning" data-hide-show="" data-el="#id_5fd9950d-db04-468d-9d7d-1f5838831556">
        <svg data-arrow="" focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="KeyboardArrowUp"><path d="M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z"></path></svg>
        <span data-hide="">HIDE</span>
        <span data-show="" hidden="">SHOW</span>
        </button>
    </div>
    <div id="id_5fd9950d-db04-468d-9d7d-1f5838831556" class="mt-2">
        <ul><li><a class="secondary link" target="_blank" href="https://developer.mozilla.org//en-US/docs/Web/API/Vibration_API">Vibration API Reference</a></li></ul>
        <blockquote class="blockquote mt-2">
            Most modern mobile devices include vibration hardware, which lets software code provide physical feedback to the yser by causing the device to shake. The <strong>Vibration API</strong> offers Web Apps the ability to access this hardware, if it exists, and does nothing if the device doesn't support it. 
        </blockquote>
        <p class="mt-2">
            Vibration is described as a pattern of on-off pulses, which may be of varying lengths. The pattern may consist of either a single integer, describing the number of milliseconds to vibrate, or an array of integers describing a pattern of vibrations and pauses. 
        </p>
         
    </div>
</section>
<section id="id_0708c778-47a8-4577-a037-8ad3ec606001" class="mt-4">
    <div class="flex-row bb-thick justify-between"><h2 class="bold h2"><a href="#id_0708c778-47a8-4577-a037-8ad3ec606001" class="same-page bold">View Transitions API</a></h2>
        <button type="button" class="small icon-text text warning" data-hide-show="" data-el="#id_f024b318-aacc-4124-baab-c2dc6f72cef4">
        <svg data-arrow="" focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="KeyboardArrowUp"><path d="M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z"></path></svg>
        <span data-hide="">HIDE</span>
        <span data-show="" hidden="">SHOW</span>
        </button>
    </div>
    <div id="id_f024b318-aacc-4124-baab-c2dc6f72cef4" class="mt-2">
        <ul><li><a class="secondary link" target="_blank" href="https://developer.mozilla.org//en-US/docs/Web/API/View_Transitions_API">View Transitions API Reference</a></li></ul>
        <blockquote class="blockquote mt-2">
            The <strong>View Transitions API</strong> provides a mechanism for easily creating animated transitions between different website views. This includes animation between DOM states in a single page app (SPA), and animating the navigation between documents in a multi-page app. 
        </blockquote>
        <p class="mt-2">
            View Transitions are a popular design choice for reducing user's cognitive load, helping them stay in context, and reducing perceived loading latency as they move between states or views of an application.
        </p>
         
    </div>
</section>
<section id="id_86af3660-9bb4-4b69-8fb2-e4b76d64db04" class="mt-4">
    <div class="flex-row bb-thick justify-between"><h2 class="bold h2"><a href="#id_86af3660-9bb4-4b69-8fb2-e4b76d64db04" class="same-page bold">VirtualKeyboard API</a></h2>
        <button type="button" class="small icon-text text warning" data-hide-show="" data-el="#id_72b033f2-2a3f-49a7-981f-aa4cd995f3e6">
        <svg data-arrow="" focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="KeyboardArrowUp"><path d="M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z"></path></svg>
        <span data-hide="">HIDE</span>
        <span data-show="" hidden="">SHOW</span>
        </button>
    </div>
    <div id="id_72b033f2-2a3f-49a7-981f-aa4cd995f3e6" class="mt-2">
        <ul><li><a class="secondary link" target="_blank" href="https://developer.mozilla.org//en-US/docs/Web/API/VirtualKeyboard_API">VirtualKeyboard API Reference</a></li></ul>
        <blockquote class="blockquote mt-2">
            The VirtualKeyboard API provides developers control over the layout of their applications when the on-screen virtual keyboard appears and disappears on devices such as tablets, mobile phones, or other devices where a hardware keyboard may not be available.
        </blockquote>
        <div class="flex-row justify-center">
            <img 
            width="<%-locals.desktop?650:(locals.tablet?501:351)%>" 
            height="<%-locals.desktop?392:(locals.tablet?325:259)%>" 
            style="margin: 4px auto; max-width: 100%; aspect-ratio: auto 88 / 65 !important; height: auto;"
            srcset="https://image.storething.org/frankmbrown%2Fc200c1e7-858b-43fa-9e78-722af6e59aae-mobile.jpeg 351w, https://image.storething.org/frankmbrown%2Fc200c1e7-858b-43fa-9e78-722af6e59aae-tablet.jpeg 501w, https://image.storething.org/frankmbrown%2Fc200c1e7-858b-43fa-9e78-722af6e59aae-desktop.jpeg 650w" 
            sizes="(max-width: 550px) 259px, ((min-width: 550px) and (max-width: 1200px)) 325px, (min-width: 1200px) 392px" 
            src="https://image.storething.org/frankmbrown%2Fc200c1e7-858b-43fa-9e78-722af6e59aae-desktop.jpeg" 
            alt="VirtualKeyboard"
            data-text="The figure below illustrates the difference in viewport height and scroll position on a web page when the device has its on-screen virtual keyboard hidden, and when it is shown." 
            />
        </div>
        <p class="mt-2">
            More complex applications or specific devices such as multi-screen mobile phones may required more control of the layout when the virtual keyboard appears. The VirtualKeyboard API can be used to opt out of the way the browser automatically handles the virtual keyboard, and take full control of it instead. With the VirtualKeyboard APU, the keyboard still appears and disappears as necessary when form controls are focused, but the viewport does not change, and you can use JavaScript and CSS to adapt your layout.
        </p>
         
    </div>
</section>
<section id="id_6abb3ecd-dbda-47d1-901f-117e58e8ad70" class="mt-4">
    <div class="flex-row bb-thick justify-between"><h2 class="bold h2"><a href="#id_6abb3ecd-dbda-47d1-901f-117e58e8ad70" class="same-page bold">Visual Viewport</a></h2>
        <button type="button" class="small icon-text text warning" data-hide-show="" data-el="#id_f1e530b2-9ccd-42fd-a237-3a8285d24ef3">
        <svg data-arrow="" focusable="false" inert viewBox="0 0 24 24" tabindex="-1" title="KeyboardArrowUp"><path d="M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z"></path></svg>
        <span data-hide="">HIDE</span>
        <span data-show="" hidden="">SHOW</span>
        </button>
    </div>
    <div id="id_f1e530b2-9ccd-42fd-a237-3a8285d24ef3" class="mt-2">
        <ul><li><a class="secondary link" target="_blank" href="https://developer.mozilla.org//en-US/docs/Web/API/Visual_Viewport_API">Visual Viewport Reference</a></li></ul>
        <blockquote class="blockquote mt-2">
            The <strong>Virtual Viewport API</strong> provides an explicit mechanism for querying and modifying the properties of the window's visual viewport. The visual viewport is the visual portion of a screen excluding on-screen keyboards, areas outside of a pinch-zoom area, or any on-screen artifact that doesn't scale with the dimensions of a page. 
        </blockquote>
        <p class="mt-2">
            The mobile web contains two viewports, the layout viewport and the visual viewport. The layout viewport covers all the elements on a page and the visual viewport is what is actually visible on the screen. When the user pinch-zooms into the page, the visual viewport shrinks but the layout viewport is uchanged. 
        </p>
         
    </div>
</section>